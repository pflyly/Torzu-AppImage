name: Build Sudachi
concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:

jobs:
  Sudachi_build:
    runs-on: ubuntu-22.04
    container: artixlinux/artixlinux:latest
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      if: always()
      run: |
        sed -i 's/DownloadUser/#DownloadUser/g' /etc/pacman.conf
        pacman -Syu --noconfirm base-devel strace patchelf curl wget \
          desktop-file-utils git artix-archlinux-support llvm mesa xorg-server-xvfb \
          vulkan-radeon vulkan-intel vulkan-nouveau pulseaudio pulseaudio-alsa pipewire 
        pacman-key --init && pacman-key --populate archlinux
        printf "\n[extra]\nInclude = /etc/pacman.d/mirrorlist-arch\n" | tee -a /etc/pacman.conf
        sudo pacman -Syu --noconfirm \
          zsync \
          catch2 \
          enet \
          gamemode \
          cmake \
          gcc13 \
          glslang \
          glu \
          hidapi \
          xcb-util-wm \
          xcb-util-image \
          xcb-util-renderutil \
          libxkbcommon-x11 \
          libxi \
          nasm \
          qt5-base \
          qt5-tools \
          qt5-webengine \
          qt5-multimedia \
          qt5-wayland \
          mbedtls2 \
          fmt \
          nlohmann-json \
          aom \
          libass \
          haskell-gnutls \
          sdl2 \
          sdl3 \
          qt6 \
          qt6-base \
          qt6-tools \
          doxygen \
          rapidjson \
          qt6-webengine \
          qt6-multimedia \
          qt6-wayland \
          brotli \
          libva \
          meson \
          ninja \
          x264 \
          x265 \
          numactl \
          libvpx \
          libfdk-aac \
          libopusenc \
          ffmpeg \
          svt-av1 \
          dav1d \
          boost \
          clang \
          vulkan-headers \
          zip \
          unzip \
          dos2unix \
          boost-libs \
          qt5ct
   
    - name: Compile sudachi Optimized
      run: |
        chmod +x ./sudachi-appimage.sh && ./sudachi-appimage.sh
        mkdir -p dist
        mv *.AppImage* dist/
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4.6.1
      with:
        name: AppImage
        path: 'dist'
    
  release:
      name: "release"
      needs: [Sudachi_build]
      permissions: write-all
      runs-on: ubuntu-latest

      steps:
        - uses: actions/download-artifact@v4.1.9
          with:
            name: AppImage

        - name: Create release version
          run: |
            export VERSION="v1.0.15"
            echo "APP_VERSION=${VERSION}" >> "${GITHUB_ENV}"
    
        #Version Release
        - name: Releaser
          uses: softprops/action-gh-release@v2
          with:
            name: "Sudachi AppImage for Steamdeck: ${{ env.APP_VERSION }}"
            tag_name: "${{ env.APP_VERSION }}"
            prerelease: true
            draft: false
            generate_release_notes: false
            make_latest: false
            files: |
              *.AppImage*
          continue-on-error: false
